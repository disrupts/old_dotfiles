# Local functions
function logate-nib-hex2bin() {
  if   [[ $1 == "0" ]]; then; echo "0000"
  elif [[ $1 == "1" ]]; then; echo "0001"
  elif [[ $1 == "2" ]]; then; echo "0010"
  elif [[ $1 == "3" ]]; then; echo "0011"
  elif [[ $1 == "4" ]]; then; echo "0100"
  elif [[ $1 == "5" ]]; then; echo "0101"
  elif [[ $1 == "6" ]]; then; echo "0110"
  elif [[ $1 == "7" ]]; then; echo "0111"
  elif [[ $1 == "8" ]]; then; echo "1000"
  elif [[ $1 == "9" ]]; then; echo "1001"
  elif [[ $1 == "a" ]]; then; echo "1010"
  elif [[ $1 == "A" ]]; then; echo "1010"
  elif [[ $1 == "b" ]]; then; echo "1011"
  elif [[ $1 == "B" ]]; then; echo "1011"
  elif [[ $1 == "c" ]]; then; echo "1100"
  elif [[ $1 == "C" ]]; then; echo "1100"
  elif [[ $1 == "d" ]]; then; echo "1101"
  elif [[ $1 == "D" ]]; then; echo "1101"
  elif [[ $1 == "e" ]]; then; echo "1110"
  elif [[ $1 == "E" ]]; then; echo "1110"
  elif [[ $1 == "f" ]]; then; echo "1111"
  elif [[ $1 == "F" ]]; then; echo "1111"
  else; echo "ERROR: bad imput in logate-hex2bin."
  fi
}

# Exported function
function logate-hex2bin() {
  for x; do
    local -a hex_array
    hex_array=( $(echo $x | sed 's/\(.\)/\1 /g') )
    for hex in $hex_array; do
      printf $(logate-nib-hex2bin $hex)
    done
    printf ' '
    unset hex
  done
  echo ""
  unset x
}

logate-hex2bin "$@"
